{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.defaultLexerErrorProvider = void 0;\nexports.defaultLexerErrorProvider = {\n  buildUnableToPopLexerModeMessage: function (token) {\n    return \"Unable to pop Lexer Mode after encountering Token ->\" + token.image + \"<- The Mode Stack is empty\";\n  },\n  buildUnexpectedCharactersMessage: function (fullText, startOffset, length, line, column) {\n    return \"unexpected character: ->\" + fullText.charAt(startOffset) + \"<- at offset: \" + startOffset + \",\" + (\" skipped \" + length + \" characters.\");\n  }\n};","map":{"version":3,"sources":["/Users/charlie/Desktop/SneakViz/node_modules/chevrotain/src/scan/lexer_errors_public.ts"],"names":[],"mappings":";;;;;;AAEa,OAAA,CAAA,yBAAA,GAAwD;AACnE,EAAA,gCAAgC,EAAhC,UAAiC,KAAjC,EAA8C;AAC5C,WAAO,yDAAuD,KAAK,CAAC,KAA7D,GAAkE,4BAAzE;AACD,GAHkE;AAKnE,EAAA,gCAAgC,EAAhC,UACE,QADF,EAEE,WAFF,EAGE,MAHF,EAIE,IAJF,EAKE,MALF,EAKiB;AAEf,WACE,6BAA2B,QAAQ,CAAC,MAAT,CACzB,WADyB,CAA3B,GAEC,gBAFD,GAEkB,WAFlB,GAE6B,GAF7B,IAEmC,cAAY,MAAZ,GAAkB,cAFrD,CADF;AAKD;AAjBkE,CAAxD","sourcesContent":["import { ILexerErrorMessageProvider, IToken } from \"@chevrotain/types\"\n\nexport const defaultLexerErrorProvider: ILexerErrorMessageProvider = {\n  buildUnableToPopLexerModeMessage(token: IToken): string {\n    return `Unable to pop Lexer Mode after encountering Token ->${token.image}<- The Mode Stack is empty`\n  },\n\n  buildUnexpectedCharactersMessage(\n    fullText: string,\n    startOffset: number,\n    length: number,\n    line?: number,\n    column?: number\n  ): string {\n    return (\n      `unexpected character: ->${fullText.charAt(\n        startOffset\n      )}<- at offset: ${startOffset},` + ` skipped ${length} characters.`\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"script"}