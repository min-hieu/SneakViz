{"ast":null,"code":"var _jsxFileName = \"/Users/charlie/Desktop/SneakViz/src/screen.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useState, Suspense } from 'react';\nimport { Canvas, useFrame, useThree } from '@react-three/fiber';\nimport { useTexture, OrbitControls } from '@react-three/drei';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst S = _ref => {\n  _s();\n\n  let {\n    col,\n    pos\n  } = _ref;\n  const [hover, setHover] = useState(false);\n  const [theta, setTheta] = useState(0);\n  let map = useTexture('/shoe.png');\n  useFrame((_ref2, delta) => {\n    let {\n      camera,\n      scene\n    } = _ref2;\n    setTheta(theta + .01);\n    camera.position.x = 5 * Math.sin(theta);\n    camera.position.z = 5 * Math.cos(theta);\n    camera.lookAt(scene.position);\n  });\n  return /*#__PURE__*/_jsxDEV(\"sprite\", {\n    position: pos,\n    onPointerOver: e => setHover(true),\n    onPointerOut: e => setHover(false),\n    children: /*#__PURE__*/_jsxDEV(\"spriteMaterial\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(S, \"Gl+HAFjQkMD1buh6zK+xOucb/7s=\", false, function () {\n  return [useTexture, useFrame];\n});\n\n_c = S;\n\nconst createRandomSprite = numSprite => {\n  let sprites = [];\n\n  for (let i = 0; i < numSprite; i++) {\n    let pos = [Math.random() * 4 - 2, Math.random() * 4 - 2, Math.random() * 4 - 2];\n    let col = randomColor();\n    let key = \"s\" + i;\n    sprites.push( /*#__PURE__*/_jsxDEV(S, {\n      pos: pos,\n      col: col\n    }, key, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this));\n  }\n\n  return sprites;\n};\n\nconst randomColor = () => {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n\n  return color;\n};\n\nconst canvasH = \"80vh\";\nconst canvasW = \"90vw\";\n\nconst Rotate = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c2 = Rotate;\n\nconst Screen = () => {\n  _s2();\n\n  const [sprites, setSprites] = useState(createRandomSprite(12));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Canvas, {\n      style: {\n        height: canvasH,\n        background: \"white\"\n      },\n      camera: {\n        fov: 999,\n        position: [0, 0, 6]\n      },\n      children: [/*#__PURE__*/_jsxDEV(OrbitControls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ambientLight\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"pointLight\", {\n        position: [10, 10, 10]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), sprites]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => setSprites(createRandomSprite(12)),\n      children: \"Shuffle\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(Screen, \"EyIpPpUeK72tBxAAQgCbdZoKd2Y=\");\n\n_c3 = Screen;\nexport default Screen;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"S\");\n$RefreshReg$(_c2, \"Rotate\");\n$RefreshReg$(_c3, \"Screen\");","map":{"version":3,"sources":["/Users/charlie/Desktop/SneakViz/src/screen.js"],"names":["React","useRef","useState","Suspense","Canvas","useFrame","useThree","useTexture","OrbitControls","S","col","pos","hover","setHover","theta","setTheta","map","delta","camera","scene","position","x","Math","sin","z","cos","lookAt","e","createRandomSprite","numSprite","sprites","i","random","randomColor","key","push","letters","color","floor","canvasH","canvasW","Rotate","Screen","setSprites","height","background","fov"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,EAAkCC,QAAlC,QAAkD,OAAlD;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,QAA2C,oBAA3C;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,mBAA1C;;;;AAGA,MAAMC,CAAC,GAAG,QAAe;AAAA;;AAAA,MAAd;AAACC,IAAAA,GAAD;AAAKC,IAAAA;AAAL,GAAc;AACvB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM,CAACY,KAAD,EAAQC,QAAR,IAAoBb,QAAQ,CAAC,CAAD,CAAlC;AACA,MAAIc,GAAG,GAAGT,UAAU,CAAC,WAAD,CAApB;AAEAF,EAAAA,QAAQ,CAAC,QAAoBY,KAApB,KAA8B;AAAA,QAA7B;AAAEC,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAA6B;AACrCJ,IAAAA,QAAQ,CAACD,KAAK,GAAG,GAAT,CAAR;AACAI,IAAAA,MAAM,CAACE,QAAP,CAAgBC,CAAhB,GAAoB,IAAIC,IAAI,CAACC,GAAL,CAAST,KAAT,CAAxB;AACAI,IAAAA,MAAM,CAACE,QAAP,CAAgBI,CAAhB,GAAoB,IAAIF,IAAI,CAACG,GAAL,CAASX,KAAT,CAAxB;AACAI,IAAAA,MAAM,CAACQ,MAAP,CAAcP,KAAK,CAACC,QAApB;AACD,GALO,CAAR;AAOA,sBACE;AACE,IAAA,QAAQ,EAAET,GADZ;AAEE,IAAA,aAAa,EAAGgB,CAAD,IAAOd,QAAQ,CAAC,IAAD,CAFhC;AAGE,IAAA,YAAY,EAAGc,CAAD,IAAOd,QAAQ,CAAC,KAAD,CAH/B;AAAA,2BAKE;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAtBD;;GAAMJ,C;UAGMF,U,EAEVF,Q;;;KALII,C;;AAwBN,MAAMmB,kBAAkB,GAAKC,SAAF,IAAiB;AAC1C,MAAIC,OAAO,GAAG,EAAd;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,SAApB,EAA+BE,CAAC,EAAhC,EAAoC;AAClC,QAAIpB,GAAG,GAAG,CAACW,IAAI,CAACU,MAAL,KAAc,CAAd,GAAgB,CAAjB,EAAmBV,IAAI,CAACU,MAAL,KAAc,CAAd,GAAgB,CAAnC,EAAqCV,IAAI,CAACU,MAAL,KAAc,CAAd,GAAgB,CAArD,CAAV;AACA,QAAItB,GAAG,GAAGuB,WAAW,EAArB;AACA,QAAIC,GAAG,GAAG,MAAMH,CAAhB;AACAD,IAAAA,OAAO,CAACK,IAAR,eACE,QAAC,CAAD;AAAa,MAAA,GAAG,EAAExB,GAAlB;AAAuB,MAAA,GAAG,EAAED;AAA5B,OAAQwB,GAAR;AAAA;AAAA;AAAA;AAAA,YADF;AAGD;;AACD,SAAOJ,OAAP;AACD,CAXD;;AAaA,MAAMG,WAAW,GAAG,MAAM;AACxB,MAAIG,OAAO,GAAG,kBAAd;AACA,MAAIC,KAAK,GAAG,GAAZ;;AACA,OAAK,IAAIN,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1BM,IAAAA,KAAK,IAAID,OAAO,CAACd,IAAI,CAACgB,KAAL,CAAWhB,IAAI,CAACU,MAAL,KAAgB,EAA3B,CAAD,CAAhB;AACD;;AACD,SAAOK,KAAP;AACD,CAPD;;AASA,MAAME,OAAO,GAAG,MAAhB;AACA,MAAMC,OAAO,GAAG,MAAhB;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAEnB,sBACE,qCADF;AAID,CAND;;MAAMA,M;;AAQN,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACnB,QAAM,CAACZ,OAAD,EAAUa,UAAV,IAAwBzC,QAAQ,CAAC0B,kBAAkB,CAAC,EAAD,CAAnB,CAAtC;AAEA,sBACE;AAAA,4BACE,QAAC,MAAD;AACE,MAAA,KAAK,EAAE;AACLgB,QAAAA,MAAM,EAAEL,OADH;AAELM,QAAAA,UAAU,EAAE;AAFP,OADT;AAKE,MAAA,MAAM,EAAE;AACNC,QAAAA,GAAG,EAAE,GADC;AAEN1B,QAAAA,QAAQ,EAAE,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP;AAFJ,OALV;AAAA,8BAUE,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,cAVF,eAWE;AAAA;AAAA;AAAA;AAAA,cAXF,eAYE;AAAY,QAAA,QAAQ,EAAE,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT;AAAtB;AAAA;AAAA;AAAA;AAAA,cAZF,EAaGU,OAbH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAgBE;AAAQ,MAAA,OAAO,EAAGH,CAAD,IAAOgB,UAAU,CAACf,kBAAkB,CAAC,EAAD,CAAnB,CAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAhBF;AAAA,kBADF;AAsBD,CAzBD;;IAAMc,M;;MAAAA,M;AA2BN,eAAeA,MAAf","sourcesContent":["import React, { useRef, useState, Suspense } from 'react'\nimport { Canvas, useFrame, useThree } from '@react-three/fiber'\nimport { useTexture, OrbitControls } from '@react-three/drei'\n\n\nconst S = ({col,pos}) => {\n  const [hover, setHover] = useState(false)\n  const [theta, setTheta] = useState(0)\n  let map = useTexture('/shoe.png')\n\n  useFrame(({ camera, scene }, delta) => {\n    setTheta(theta + .01)\n    camera.position.x = 5 * Math.sin(theta)\n    camera.position.z = 5 * Math.cos(theta)\n    camera.lookAt(scene.position)\n  })\n\n  return (\n    <sprite\n      position={pos}\n      onPointerOver={(e) => setHover(true)}\n      onPointerOut={(e) => setHover(false)}\n    >\n      <spriteMaterial\n      />\n    </sprite>\n  )\n}\n\nconst createRandomSprite = ( numSprite ) => {\n  let sprites = []\n  for (let i = 0; i < numSprite; i++) {\n    let pos = [Math.random()*4-2,Math.random()*4-2,Math.random()*4-2]\n    let col = randomColor()\n    let key = \"s\" + i\n    sprites.push(\n      <S key={key} pos={pos} col={col}/>\n    )\n  }\n  return sprites\n}\n\nconst randomColor = () => {\n  var letters = '0123456789ABCDEF';\n  var color = '#';\n  for (var i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\nconst canvasH = \"80vh\"\nconst canvasW = \"90vw\"\n\nconst Rotate = () => {\n\n  return (\n    <>\n    </>\n  )\n}\n\nconst Screen = () => {\n  const [sprites, setSprites] = useState(createRandomSprite(12))\n\n  return (\n    <>\n      <Canvas\n        style={{\n          height: canvasH,\n          background: \"white\",\n        }}\n        camera={{\n          fov: 999,\n          position: [0, 0, 6] \n        }}\n      >\n        <OrbitControls/>\n        <ambientLight />\n        <pointLight position={[10, 10, 10]} />\n        {sprites}\n      </Canvas>\n      <button onClick={(e) => setSprites(createRandomSprite(12))}>\n        Shuffle\n      </button>\n    </>\n  )\n}\n\nexport default Screen\n"]},"metadata":{},"sourceType":"module"}