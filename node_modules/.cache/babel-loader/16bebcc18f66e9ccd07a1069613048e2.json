{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    if (typeof b !== \"function\" && b !== null) throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.collectMethods = exports.DslMethodsCollectorVisitor = exports.getProductionDslName = exports.isBranchingProd = exports.isOptionalProd = exports.isSequenceProd = void 0;\n\nvar utils_1 = require(\"@chevrotain/utils\");\n\nvar gast_public_1 = require(\"./gast_public\");\n\nvar gast_visitor_public_1 = require(\"./gast_visitor_public\");\n\nfunction isSequenceProd(prod) {\n  return prod instanceof gast_public_1.Alternative || prod instanceof gast_public_1.Option || prod instanceof gast_public_1.Repetition || prod instanceof gast_public_1.RepetitionMandatory || prod instanceof gast_public_1.RepetitionMandatoryWithSeparator || prod instanceof gast_public_1.RepetitionWithSeparator || prod instanceof gast_public_1.Terminal || prod instanceof gast_public_1.Rule;\n}\n\nexports.isSequenceProd = isSequenceProd;\n\nfunction isOptionalProd(prod, alreadyVisited) {\n  if (alreadyVisited === void 0) {\n    alreadyVisited = [];\n  }\n\n  var isDirectlyOptional = prod instanceof gast_public_1.Option || prod instanceof gast_public_1.Repetition || prod instanceof gast_public_1.RepetitionWithSeparator;\n\n  if (isDirectlyOptional) {\n    return true;\n  } // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n\n\n  if (prod instanceof gast_public_1.Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return (0, utils_1.some)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else if (prod instanceof gast_public_1.NonTerminal && (0, utils_1.contains)(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false;\n  } else if (prod instanceof gast_public_1.AbstractProduction) {\n    if (prod instanceof gast_public_1.NonTerminal) {\n      alreadyVisited.push(prod);\n    }\n\n    return (0, utils_1.every)(prod.definition, function (subProd) {\n      return isOptionalProd(subProd, alreadyVisited);\n    });\n  } else {\n    return false;\n  }\n}\n\nexports.isOptionalProd = isOptionalProd;\n\nfunction isBranchingProd(prod) {\n  return prod instanceof gast_public_1.Alternation;\n}\n\nexports.isBranchingProd = isBranchingProd;\n\nfunction getProductionDslName(prod) {\n  /* istanbul ignore else */\n  if (prod instanceof gast_public_1.NonTerminal) {\n    return \"SUBRULE\";\n  } else if (prod instanceof gast_public_1.Option) {\n    return \"OPTION\";\n  } else if (prod instanceof gast_public_1.Alternation) {\n    return \"OR\";\n  } else if (prod instanceof gast_public_1.RepetitionMandatory) {\n    return \"AT_LEAST_ONE\";\n  } else if (prod instanceof gast_public_1.RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\";\n  } else if (prod instanceof gast_public_1.RepetitionWithSeparator) {\n    return \"MANY_SEP\";\n  } else if (prod instanceof gast_public_1.Repetition) {\n    return \"MANY\";\n  } else if (prod instanceof gast_public_1.Terminal) {\n    return \"CONSUME\";\n  } else {\n    throw Error(\"non exhaustive match\");\n  }\n}\n\nexports.getProductionDslName = getProductionDslName;\n\nvar DslMethodsCollectorVisitor =\n/** @class */\nfunction (_super) {\n  __extends(DslMethodsCollectorVisitor, _super);\n\n  function DslMethodsCollectorVisitor() {\n    var _this = _super !== null && _super.apply(this, arguments) || this; // A minus is never valid in an identifier name\n\n\n    _this.separator = \"-\";\n    _this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    };\n    return _this;\n  }\n\n  DslMethodsCollectorVisitor.prototype.reset = function () {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    };\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitTerminal = function (terminal) {\n    var key = terminal.terminalType.name + this.separator + \"Terminal\";\n\n    if (!(0, utils_1.has)(this.dslMethods, key)) {\n      this.dslMethods[key] = [];\n    }\n\n    this.dslMethods[key].push(terminal);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitNonTerminal = function (subrule) {\n    var key = subrule.nonTerminalName + this.separator + \"Terminal\";\n\n    if (!(0, utils_1.has)(this.dslMethods, key)) {\n      this.dslMethods[key] = [];\n    }\n\n    this.dslMethods[key].push(subrule);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitOption = function (option) {\n    this.dslMethods.option.push(option);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetitionWithSeparator = function (manySep) {\n    this.dslMethods.repetitionWithSeparator.push(manySep);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetitionMandatory = function (atLeastOne) {\n    this.dslMethods.repetitionMandatory.push(atLeastOne);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (atLeastOneSep) {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitRepetition = function (many) {\n    this.dslMethods.repetition.push(many);\n  };\n\n  DslMethodsCollectorVisitor.prototype.visitAlternation = function (or) {\n    this.dslMethods.alternation.push(or);\n  };\n\n  return DslMethodsCollectorVisitor;\n}(gast_visitor_public_1.GAstVisitor);\n\nexports.DslMethodsCollectorVisitor = DslMethodsCollectorVisitor;\nvar collectorVisitor = new DslMethodsCollectorVisitor();\n\nfunction collectMethods(rule) {\n  collectorVisitor.reset();\n  rule.accept(collectorVisitor);\n  var dslMethods = collectorVisitor.dslMethods; // avoid uncleaned references\n\n  collectorVisitor.reset();\n  return dslMethods;\n}\n\nexports.collectMethods = collectMethods;","map":{"version":3,"sources":["/Users/charlie/Desktop/SneakViz/node_modules/chevrotain/src/parse/grammar/gast/gast.ts"],"names":[],"mappings":"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","sourcesContent":["import { contains, every, has, some } from \"@chevrotain/utils\"\nimport {\n  AbstractProduction,\n  Alternation,\n  Alternative,\n  NonTerminal,\n  Option,\n  Repetition,\n  RepetitionMandatory,\n  RepetitionMandatoryWithSeparator,\n  RepetitionWithSeparator,\n  Rule,\n  Terminal\n} from \"./gast_public\"\nimport { GAstVisitor } from \"./gast_visitor_public\"\nimport { IProduction, IProductionWithOccurrence } from \"@chevrotain/types\"\n\nexport function isSequenceProd(prod: IProduction): boolean {\n  return (\n    prod instanceof Alternative ||\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionMandatory ||\n    prod instanceof RepetitionMandatoryWithSeparator ||\n    prod instanceof RepetitionWithSeparator ||\n    prod instanceof Terminal ||\n    prod instanceof Rule\n  )\n}\n\nexport function isOptionalProd(\n  prod: IProduction,\n  alreadyVisited: NonTerminal[] = []\n): boolean {\n  const isDirectlyOptional =\n    prod instanceof Option ||\n    prod instanceof Repetition ||\n    prod instanceof RepetitionWithSeparator\n  if (isDirectlyOptional) {\n    return true\n  }\n\n  // note that this can cause infinite loop if one optional empty TOP production has a cyclic dependency with another\n  // empty optional top rule\n  // may be indirectly optional ((A?B?C?) | (D?E?F?))\n  if (prod instanceof Alternation) {\n    // for OR its enough for just one of the alternatives to be optional\n    return some((<Alternation>prod).definition, (subProd: IProduction) => {\n      return isOptionalProd(subProd, alreadyVisited)\n    })\n  } else if (prod instanceof NonTerminal && contains(alreadyVisited, prod)) {\n    // avoiding stack overflow due to infinite recursion\n    return false\n  } else if (prod instanceof AbstractProduction) {\n    if (prod instanceof NonTerminal) {\n      alreadyVisited.push(prod)\n    }\n    return every(\n      (<AbstractProduction>prod).definition,\n      (subProd: IProduction) => {\n        return isOptionalProd(subProd, alreadyVisited)\n      }\n    )\n  } else {\n    return false\n  }\n}\n\nexport function isBranchingProd(prod: IProduction): boolean {\n  return prod instanceof Alternation\n}\n\nexport function getProductionDslName(prod: IProductionWithOccurrence): string {\n  /* istanbul ignore else */\n  if (prod instanceof NonTerminal) {\n    return \"SUBRULE\"\n  } else if (prod instanceof Option) {\n    return \"OPTION\"\n  } else if (prod instanceof Alternation) {\n    return \"OR\"\n  } else if (prod instanceof RepetitionMandatory) {\n    return \"AT_LEAST_ONE\"\n  } else if (prod instanceof RepetitionMandatoryWithSeparator) {\n    return \"AT_LEAST_ONE_SEP\"\n  } else if (prod instanceof RepetitionWithSeparator) {\n    return \"MANY_SEP\"\n  } else if (prod instanceof Repetition) {\n    return \"MANY\"\n  } else if (prod instanceof Terminal) {\n    return \"CONSUME\"\n  } else {\n    throw Error(\"non exhaustive match\")\n  }\n}\n\nexport class DslMethodsCollectorVisitor extends GAstVisitor {\n  // A minus is never valid in an identifier name\n  public separator = \"-\"\n  public dslMethods = {\n    option: [],\n    alternation: [],\n    repetition: [],\n    repetitionWithSeparator: [],\n    repetitionMandatory: [],\n    repetitionMandatoryWithSeparator: []\n  }\n\n  reset() {\n    this.dslMethods = {\n      option: [],\n      alternation: [],\n      repetition: [],\n      repetitionWithSeparator: [],\n      repetitionMandatory: [],\n      repetitionMandatoryWithSeparator: []\n    }\n  }\n\n  public visitTerminal(terminal: Terminal): void {\n    const key = terminal.terminalType.name + this.separator + \"Terminal\"\n    if (!has(this.dslMethods, key)) {\n      this.dslMethods[key] = []\n    }\n    this.dslMethods[key].push(terminal)\n  }\n\n  public visitNonTerminal(subrule: NonTerminal): void {\n    const key = subrule.nonTerminalName + this.separator + \"Terminal\"\n    if (!has(this.dslMethods, key)) {\n      this.dslMethods[key] = []\n    }\n    this.dslMethods[key].push(subrule)\n  }\n\n  public visitOption(option: Option): void {\n    this.dslMethods.option.push(option)\n  }\n\n  public visitRepetitionWithSeparator(manySep: RepetitionWithSeparator): void {\n    this.dslMethods.repetitionWithSeparator.push(manySep)\n  }\n\n  public visitRepetitionMandatory(atLeastOne: RepetitionMandatory): void {\n    this.dslMethods.repetitionMandatory.push(atLeastOne)\n  }\n\n  public visitRepetitionMandatoryWithSeparator(\n    atLeastOneSep: RepetitionMandatoryWithSeparator\n  ): void {\n    this.dslMethods.repetitionMandatoryWithSeparator.push(atLeastOneSep)\n  }\n\n  public visitRepetition(many: Repetition): void {\n    this.dslMethods.repetition.push(many)\n  }\n\n  public visitAlternation(or: Alternation): void {\n    this.dslMethods.alternation.push(or)\n  }\n}\n\nconst collectorVisitor = new DslMethodsCollectorVisitor()\nexport function collectMethods(rule: Rule): {\n  option: Option[]\n  alternation: Alternation[]\n  repetition: Repetition[]\n  repetitionWithSeparator: RepetitionWithSeparator[]\n  repetitionMandatory: RepetitionMandatory[]\n  repetitionMandatoryWithSeparator: RepetitionMandatoryWithSeparator\n} {\n  collectorVisitor.reset()\n  rule.accept(collectorVisitor)\n  const dslMethods = collectorVisitor.dslMethods\n  // avoid uncleaned references\n  collectorVisitor.reset()\n  return <any>dslMethods\n}\n"]},"metadata":{},"sourceType":"script"}